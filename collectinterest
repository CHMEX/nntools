#!/bin/bash
#
# @see https://github.com/DeckerSU/komodo_scripts/blob/master/sendawaynn.sh
# @author webworker01
#
scriptpath="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

source $scriptpath/config
source $scriptpath/functions

if [[ ! -z $1 ]] && [[ "$1" == *"combine" ]]; then
    combine=1
else
    combine=0
fi

utxoamount=0.001
utxofeederhigh=9
utxofeederlow=3
collectinterestthreshold=0.25

dt=$(date '+%Y-%m-%d %H:%M:%S');

unspent=$($komodocli listunspent)
minedcount=$(jq '[.[] | select(.generated==true)] | length' <<< $unspent)

#check if feeder utxo needs to be fed
feederutxo=$(jq -r --arg utxosize $utxoamount --arg feedermax $utxofeederhigh '[.[] | select (.generated==false and .spendable==true and .amount>($utxosize|tonumber) and .amount<($feedermax|tonumber))]' <<< $unspent)
feederutxovin=$(jq '[.[] | {"txid":.txid, "vout":.vout}]' <<< $feederutxo)
feederamount=$(jq '[.[].amount] | add' <<< $feederutxo)
feederfed=0
if (( minedcount > 0 )); then
    feedutxo=$(jq -r --arg minsize $utxofeederlow '[.[] | select (.amount>($minsize|tonumber) and .generated==true and .spendable==true)] | sort_by(.amount)[0]' <<< $unspent)
    feedthis=$(jq -r '[. | {"txid":.txid, "vout":.vout}] | tostring' <<< $feedutxo)
    feedthisamount=$(jq -r '.amount' <<< $feedutxo)
    feedthisamountfixed=$( printf "%.8f" $feedthisamount )

    #if feeder utxo doesn't exist
    if [[ "$feederamount" == "null" ]]; then

        rawtxhex=$($komodocli createrawtransaction ${feedthis} '''{ "'$nn_address'": '$feedthisamountfixed' }''')
        rawtxid=$(sendRaw $rawtxhex)

        feederfed=1

        echo "$dt [collectinterest] create the feeder - txid : $rawtxid" >> $nntoolslogfile

    #if feeder utxo is getting low
    elif (( $(echo "$feederamount < $utxofeederlow" | bc -l) )); then
        combinefeederamounts=$( printf "%.8f" $(bc -l <<< "($feederamount + $feedthisamountfixed)") )

        combinefeederutxos=$(jq -r --argjson arr1 "$feederutxovin" --argjson arr2 "$feedthis" -n '$arr1 + $arr2 | tostring')

        rawtxhex=$($komodocli createrawtransaction ${combinefeederutxos} '''{ "'$nn_address'": '$combinefeederamounts' }''')

        rawtxid=$(sendRaw $rawtxhex)
        feederfed=1

        echo "$dt [collectinterest] feed the feeder - txid : $rawtxid" >> $nntoolslogfile
    fi
fi

#check if mined amount over a certain threshold
if (( minedcount > 3 )) || (( minedcount > 0 && combine > 0 )); then
    #unlock holding txs and calculate interest

    #lockedtx=$($komodocli listlockunspent | jq -c .)
    #$komodocli lockunspent true $lockedtx

    unspent=$($komodocli listunspent)
    alreadyutxounlocked=$(jq -r --arg feedermax $utxofeederhigh '[.[] | select (.generated==false and .spendable==true and .amount>($feedermax|tonumber))]' <<< $unspent)
    interest=$(jq -r '[.[].interest] | add' <<< $alreadyutxounlocked)
    interest=$( printf "%.8f" $interest )
    printf "\nInterest: $interest\n"

    consolidateutxo=$(jq -r '[.[] | select (.generated==true and .spendable==true)]' <<< $unspent)
    #save one mined off the top to feed the feeder if needed
    if (( feederfed == 1 )); then
        consolidateutxo=$(jq -r '. | del(.[0])' <<< $consolidateutxo)
    fi
    consolidatethese=$(jq -r '[.[] | {"txid":.txid, "vout":.vout}]' <<< $consolidateutxo)
    consolidateamount=$(jq -r '[.[].amount] | add' <<< $consolidateutxo)

    echo "$dt [collectinterest] current interest $interest" >> $nntoolslogfile

    #combine all
    if (( $(echo "$interest > $collectinterestthreshold" | bc) )) || (( combine > 0 )); then
        alreadyconsolidated=$(jq '[.[] | {"txid":.txid, "vout":.vout}]' <<< $alreadyutxounlocked)
        alreadyconsolidatedamount=$(jq -r '[.[].amount] | add' <<< $alreadyutxounlocked)

        consolidateamountfixed=$( printf "%.8f" $(bc -l <<< "($consolidateamount+$alreadyconsolidatedamount+$interest)") )

        combineconsolidateutxos=$(jq -r --argjson arr1 "$consolidatethese" --argjson arr2 "$alreadyconsolidated" -n '$arr1 + $arr2 | tostring')

        rawtxhex=$($komodocli createrawtransaction ${combineconsolidateutxos} '''{ "'$nn_address'": '$consolidateamountfixed' }''')
        rawtxid=$(sendRaw $rawtxhex)

        echo "$dt [collectinterest] combine all - txid : $rawtxid" >> $nntoolslogfile

    #combine just mined
    else
        consolidateamountfixed=$( printf "%.8f" $consolidateamount )
        consolidateutxostring=$(jq -r '. | tostring' <<< $consolidatethese)

        rawtxhex=$($komodocli createrawtransaction ${consolidateutxostring} '''{ "'$nn_address'": '$consolidateamountfixed' }''')
        rawtxid=$(sendRaw $rawtxhex)

        echo "$dt [collectinterest] combine just mined - txid : $rawtxid" >> $nntoolslogfile
    fi

    #$komodocli lockunspent false $lockedtx
fi

#lock existing utxos that aren't for the feeder
#alreadyutxo=$(echo $unspent | jq -r --arg feedermax $utxofeederhigh '[.[] | select (.generated==false and .spendable==true and .amount>($feedermax|tonumber))]')
#lockalreadyutxos=$(echo $alreadyutxo | jq -r '[.[] | {"txid":.txid, "vout":.vout}] | tostring')
#if [[ "$lockalreadyutxos" != "null" ]] && [[ "$lockalreadyutxos" != "[]" ]]; then
#    $komodocli lockunspent false $lockalreadyutxos
#fi
