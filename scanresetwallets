#!/bin/bash
#
# Scan and reset wallets over size limit
#
# @todo 3rd party wallets
# @author webworker01
#
scriptpath="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
source $scriptpath/main

if (( $thirdpartycoins < 1 )); then
    # while [[ ! -z $monitorsize ]]; do
        #check kmd
        walletsize=$(ls -l ~/.komodo/wallet.dat  | awk '{print $5}')
        if (( $walletsize > $monitorsizekmd )); then
            log "scanresetwallets" "KMD - $walletsize"
            $scriptpath/resetwallet "KMD"
        fi

        #check hush3
        walletsize=$(ls -l ~/.komodo/HUSH3/wallet.dat  | awk '{print $5}')
        if (( $walletsize > $monitorsize )); then
            log "scanresetwallets" "HUSH3 - $walletsize"
            $scriptpath/resetwallet "HUSH3"
        fi

        #check vrsc
        walletsize=$(ls -l ~/.komodo/VRSC/wallet.dat  | awk '{print $5}')
        if (( $walletsize > $monitorsize )); then
            log "scanresetwallets" "VRSC - $walletsize"
            $scriptpath/resetwallet "VRSC"
        fi

        #check acs
        for coins in "${coinlist[@]}"; do
            coin=($coins)
            walletsize=$(ls -l ~/.komodo/${coin[0]}/wallet.dat  | awk '{print $5}')
            if (( $walletsize > $monitorsize )); then
                log "scanresetwallets" "${coin[0]} - $walletsize"
                $scriptpath/resetwallet ${coin[0]}
            fi
        done
        # sleep $sleepytime
    # done
else
    #check kmd
    walletsize=$(ls -l ~/.komodo/wallet.dat  | awk '{print $5}')
    if (( $walletsize > $monitorsizekmd )); then
        log "scanresetwallets" "KMD - $walletsize"
        $scriptpath/resetwallet "KMD"
    fi
fi
